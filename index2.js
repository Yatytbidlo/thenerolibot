// const TelegramBot = require('node-telegram-bot-api');
// const express = require('express');
// const cors = require('cors');
// const fs = require('fs');
// const csv = require('csv-parser')
// const createCsvWriter = require('csv-writer').createObjectCsvWriter;
// const bot = new TelegramBot(token, {polling: true});
// const app = express();
// const csvClientsFile = 'clients.csv'
// const jsonClientsFile = 'clients.json'
// let dataClient
// let dataClients = [];

app.use(express.json());
app.use(cors())

const webAppUrl ='https://glistening-scone-bba84c.netlify.app/'
const webFormUrl = 'https://silly-pudding-3dd27b.netlify.app/'


// –ö–Ω–æ–ø–∫–∏ /////////////////////////////////////////////////////////////////////////////////

const buttonsStart = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: "–ú–µ–Ω—é", callback_data:"menu"}, {text: "–û –Ω–∞—Å", callback_data: "info"}]
        ]
    })
}

const buttonsMenu = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: '–ù–∞—à –ø–∞—Ä—Ñ—é–ºüåü', callback_data:'perfume'}],
            [{text: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Çüßê', callback_data:'certificate'}],
            [{text: '–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤üëÄ', callback_data: 'replies'}],
            [{text: "Instagramüì∑", callback_data: "https://www.instagram.com/thedata.kz/"}],
            [{text: "TikToküì±", callback_data: "https://www.tiktok.com/@thedatakz",}]
        ]
    })
}

const buttonsReply = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: '–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'next_reply'}],
            [{text:'–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu'}],
        ]
    })
}

const buttonsReplyEnd = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: '–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'end_reply'}],
            [{text:'–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu'}],
        ]
    })
}

const buttonsReplyEnding = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: '–ù–∞—à –ø–∞—Ä—Ñ—é–ºüåü', callback_data:'perfume'}],
            [{text:'–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu'}],
        ]
    })
}

const buttonForm = {
    reply_markup: {
        keyboard: [
            [{text: "–ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", web_app: {url:webFormUrl}}]
        ]
    }
}

const buttonsPerfume = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text:"ü§µ‚Äç‚ôÇÔ∏è–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—åü§µ‚Äç‚ôÄÔ∏è", callback_data:"classic_style"}],
            [{text:"üèãÔ∏è–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å‚öΩÔ∏è", callback_data:"sport_style"}],
            [{text:"üíª–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—åüì±", callback_data:"modern_style"}],
            [{text:'–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚Ü©Ô∏è', callback_data: 'back_menu'}],
        ]
    })
}

const buttonsAfterPerfume = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: "–ü–µ—Ä–µ–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω", web_app: {url:webAppUrl}}],
            [{text: "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é —Å—Ç–∏–ª–µ–π", callback_data: "back"}]
        ]
    })
}


const start = () => {

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ text ///////////////////////////////////////////////////////////////////////
    bot.on("message",  async (msg) => {
        const text = msg.text;
        const chatId = msg.chat.id;

        if (text === "/start") {
            await bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è –≤ –º–∏—Ä–µ –ø–∞—Ä—Ñ—é–º–µ—Ä–∏–∏ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Neroli! üå∏‚ú®", buttonsStart)
        }

        if (msg?.web_app_data?.data) {
            try {
                dataClient = JSON.parse(msg?.web_app_data?.data)

                dataClients.push(dataClient)

                const csvWriter = createCsvWriter({
                    path: csvClientsFile,
                    header: [
                        {id: 'name', title: '–ò–ú–Ø'},
                        {id: 'city', title: '–ì–û–†–û–î'},
                        {id: 'phone', title: '–¢–ï–õ–ï–§–û–ù'}
                    ]
                });

                await csvWriter.writeRecords(dataClients)
                    .then(() => {
                        console.log('Done...')
                    })

                fs.readFile(csvClientsFile, 'utf8', (err, data) => {
                    if (err) {
                        console.error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ clients.csv:", err);
                        // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                        dataClients = [];
                    } else {
                        try {
                            // –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤ dataClients
                            dataClients = data
                                .split('\n')
                                .map((line) => JSON.stringify(line))
                                .filter((client) => client.name && client.city && client.phone);
                            console.log('–î–∞–Ω–Ω—ã–µ –∏–∑ CSV –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', dataClients);

                            fs.writeFile(jsonClientsFile, JSON.stringify(dataClients), 'utf8', (err) => {
                                if (err) {
                                    console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è clients.json:", err);
                                } else {
                                    console.log("–î–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ clients.json.");
                                }
                            });
                        } catch (parseErr) {
                            console.error("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV:", parseErr);
                            dataClients = [];
                        }
                    }
                })

                await bot.sendMessage(chatId, `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å, ${dataClient?.name}üò∏`);
                await bot.sendSticker(chatId, 'images/sticker.webp');
                setTimeout( () => {
                    return bot.sendMessage(chatId, '–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∏—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–ª—è —Å–µ–±—è –¥—Ä—É–≥–∏–µ —Å—Ç–∏–ª–∏ü§î', buttonsAfterPerfume)}, 3000)
            } catch (e) {
                console.log(e)
            }
        }
    })
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ data   //////////////////////////////////////////////////////////////////////

    bot.on("callback_query", async (msg) => {
        const data = msg.data;
        const chatId = msg.message.chat.id;
        const existingClient = dataClients.find((client) => client.name === dataClient.name);


        if (data === "menu") {
            return bot.sendMessage(chatId, "–ü–µ—Äe—Ö–æ–¥–∏—Ç–µ –∫ –Ω–∞—à–∏–º –∞—Ä–æ–º–∞—Ç–∞–º, —Å–º–æ—Ç—Ä–∏—Ç–µ –æ—Ç–∑—ã–≤—ã –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, —Ç–∞–∫–∂–µ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ —á–µ—Ä–µ–∑ –Ω–∞—à–∏ —Å–æ—Ü.—Å–µ—Ç–∏üëá", buttonsMenu)
        }

        if (data === 'back_menu') {
            return bot.sendMessage(chatId, "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ –Ω–∞—à–∏–º –∞—Ä–æ–º–∞—Ç–∞–º, —Å–º–æ—Ç—Ä–∏—Ç–µ –æ—Ç–∑—ã–≤—ã –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, —Ç–∞–∫–∂–µ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ —á–µ—Ä–µ–∑ –Ω–∞—à–∏ —Å–æ—Ü.—Å–µ—Ç–∏üëá", buttonsMenu)
        }
// –û—Ç–∑—ã–≤—ã ////////////////////////////////////////////////////////////
        if (data === 'replies') {
            const firstReply = "images/replyfirst.jpeg"
            const options = {
                width: 790,
                height: 1600,
            }
            await bot.sendPhoto(chatId, firstReply, options)
            return bot.sendMessage(chatId, '–ü–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–æ–º—É –æ—Ç–∑—ã–≤—É', buttonsReply)
        }

        if (data === 'next_reply') {
            const secondReply = "images/replysecond.jpeg"
            const options = {
                width: 958,
                height: 1600,
            }
            await bot.sendPhoto(chatId, secondReply, options)
            return bot.sendMessage(chatId, '–ü–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–æ–º—É –æ—Ç–∑—ã–≤—É', buttonsReplyEnd)
        }

        if (data === 'end_reply') {
            const thirdReply = "images/replythird.jpeg"
            const options = {
                width: 862,
                height: 1600,
            }
            await bot.sendPhoto(chatId, thirdReply, options)
            return bot.sendMessage(chatId, '–û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å—Ç–∏–ª—è–ºüòä', buttonsReplyEnding)
        }

// –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç ///////////////////////////////////////////////////

        if (data === 'certificate') {
            const certificatePath = "images/certificate.jpg"
            const options = {
                width: 1275,
                height: 1650,
            }
            await bot.sendPhoto(chatId, certificatePath, options)
            return bot.sendMessage(chatId, '–û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å—Ç–∏–ª—è–ºüòä', buttonsReplyEnding)
        }

        if (data === "back") {
            return bot.sendMessage(chatId, "–°—Ç–∏–ª–∏ –ø–æ–¥—Å—Ç–∞—Ç—å –≤–∞—à–µ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏, –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ —á—Ç–æ –ª—É—á—à–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –≤–∞–º!üëá",  buttonsPerfume)
        }

        if (data === "info") {
            return bot.sendMessage(chatId, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–µ –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã. –ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ –Ω–∞—à–∏—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö, –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–±–æ—Ä—É –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞, –∞ —Ç–∞–∫–∂–µ —É–∑–Ω–∞—Ç—å –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –∏ –∞–∫—Ü–∏—è—Ö.\n" +
                "\n" +
                "–î–ª—è –Ω–∞—Å –ø–∞—Ä—Ñ—é–º–µ—Ä–∏—è - —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ, –∏ –º—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –ø–æ–¥–∞—Ä–∏—Ç—å —Ç–µ–±–µ –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–∏—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–∑–∏—Ü–∏–π. –ë—É–¥—å –≤ –∫—É—Ä—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤, —É–∑–Ω–∞–≤–∞–π –ø–µ—Ä–≤—ã–º –æ –Ω–æ–≤–∏–Ω–∫–∞—Ö –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∫–∞–∂–¥–æ–π –Ω–æ—Ç–æ–π, –∫–æ—Ç–æ—Ä—É—é –º—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–±–∏—Ä–∞–µ–º.\n" +
                "\n" +
                "–ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ωa–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏. –ú—ã –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞–π—Ç–∏ —Ç–æ—Ç —Å–∞–º—ã–π –∞—Ä–æ–º–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ç–≤–æ—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç —Ç–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å.\n" +
                "\n" +
                "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª –∫–æ–º–ø–∞–Ω–∏—é Neroli. –î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ –æ—Ç–∫—Ä–æ–µ–º –º–∏—Ä —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞—Ä–æ–º–∞—Ç–æ–≤! üí´üåø", buttonsMenu)
        }
        if (data.startsWith("https://www.")) {
            return bot.sendMessage(chatId, `–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: ${data}`);
        }


        if (data === "perfume") {
            const firstFotoPath = "images/firstfoto.jpg"
            const options = {
                width: 1920,
                height: 1080,
                caption: "üî•–ü–ê–†–§–Æ–ú ‚ÄúNEROLI‚Äù: –£–ù–ò–ö–ê–õ–¨–ù–û–°–¢–¨ –í –ö–ê–ñ–î–û–ô –ù–û–¢–ï –í–ê–®–ï–ì–û –ê–†–û–ú–ê–¢–êüî•"
            }

            await bot.sendPhoto(chatId, firstFotoPath, options)
            return bot.sendMessage(chatId, "–°—Ç–∏–ª–∏ –ø–æ–¥—Å—Ç–∞—Ç—å –≤–∞—à–µ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏, –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ —á—Ç–æ –ª—É—á—à–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –≤–∞–º!üëá",  buttonsPerfume)
        }

        // –°—Ç–∏–ª–∏ –ø–∞—Ä—Ñ—é–º–∞ ///////////////////////////////////////////////

        try {
            if (data === "classic_style") {
                const classicPhoto = "images/classic.jpg"
                const options = {
                    width: 926,
                    height: 1240,
                    caption: "‚ú®–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å - —ç—Ç–æ —Å–∏–º–≤–æ–ª —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç–∏, –¥–µ–ª–∏–∫–∞—Ç–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—Å—Ç–≤–∞. –ò–º–µ–Ω–Ω–æ —ç—Ç–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤ –Ω–∞—à–µ–º –∞—Ä–æ–º–µ—Ç–µ Neroli. –°–≤–µ–∂–∏–µ –Ω–æ—Ç—ã –±–µ—Ä–≥–∞–º–æ—Ç–∞ –∏ —è–±–ª–æ–∫–∞, –º—è–≥–∫–∏–µ –∞–∫—Ü–µ–Ω—Ç—ã —Ä–æ–∑–º–∞—Ä–∏–Ω–∞ –∏ –ø–∞—á—É–ª–∏, –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–µ –Ω–µ–∂–Ω–æ–π –≤–∞–Ω–∏–ª—å—é –∏ –º—É—Å–∫—É—Å–æ–º, –¥–µ–ª–∞—é—Ç —ç—Ç–æ—Ç –∞—Ä–æ–º–∞—Ç –∏–¥–µ–∞–ª—å–Ω—ã–º –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º—É —Å—Ç–∏–ª—é‚ú®"
                }
                await bot.sendPhoto(chatId, classicPhoto, options)

                if (!existingClient) {
                    // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–µ–¥–ª–æ–∂–∏–º –µ–º—É –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
                    return bot.sendMessage(chatId, "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–æ–≤–∞—Ä—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—éüßê", buttonForm);
                } else {
                    // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∂–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω
                    return bot.sendMessage(chatId, "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å—Ç–∏–ª—åü§î", buttonsAfterPerfume);
                }
            }
            if (data === "sport_style") {
                const sportPhoto = "images/sport.jpg"
                const options = {
                    width: 926,
                    height: 1240,
                    caption: "üí™–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å –≤ –æ–¥–µ–∂–¥–µ —á–∞—Å—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –µ–≥–æ –ø—Ä–æ—Å—Ç–æ—Ç–æ–π –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é. Neroli, —Å –µ–≥–æ –ª–µ–≥–∫–∏–º –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º –∞—Ä–æ–º–∞—Ç–æ–º, –¥–æ–ø–æ–ª–Ω—è–µ—Ç —ç—Ç—É –ø—Ä–æ—Å—Ç–æ—Ç—É, –ø—Ä–∏–¥–∞–≤–∞—è –≤–∞–º –æ—â—É—â–µ–Ω–∏—è —Å–≤–µ–∂–µ—Å—Ç–∏ –∏ —ç–Ω–µ—Ä–≥–∏–∏, –±—É–¥—å –≤—ã –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ, –Ω–∞ –ø—Ä–æ–≥—É–ª–∫–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞—Å–ª–∞–∂–¥–∞–µ—Ç–µ—Å—å –∞–∫—Ç–∏–≤–Ω—ã–º –¥–Ω—ë–ºüí™"
                }
                await bot.sendPhoto(chatId, sportPhoto, options)

                if (!existingClient) {
                    // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–µ–¥–ª–æ–∂–∏–º –µ–º—É –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
                    return bot.sendMessage(chatId, "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–æ–≤–∞—Ä—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—éüßê", buttonForm);
                } else {
                    // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∂–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω
                    return bot.sendMessage(chatId, "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å—Ç–∏–ª—åü§î", buttonsAfterPerfume);
                }
            }
            if (data === "modern_style") {
                const modernPhoto = "images/modern.jpg"
                const options = {
                    width: 926,
                    height: 1240,
                    caption: "‚ö°Ô∏è–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å - —ç—Ç–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã, –¥–µ—Ä–∑–æ—Å—Ç—å –∏ –Ω–æ–≤–∞—Ç–æ—Ä—Å—Ç–≤–æ. –ò–º–µ–Ω–Ω–æ —ç—Ç–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤ –Ω–∞—à–µ–º –∞—Ä–æ–º–∞—Ç–µ Neroli. –ï–≥–æ —Å–≤–µ–∂–∏–µ –∏ –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏–µ –Ω–æ—Ç—ã –∏–¥–µ–∞–ª—å–Ω–æ —Å–æ—á–µ—Ç–∞—é—Ç—Å—è —Å —Å–∞–º—ã–º–∏ –Ω–æ–≤—ã–º–∏ —Ç–µ–Ω–¥–µ—Ü–∏—è–º–∏ –º–æ–¥—ã‚ö°Ô∏è"
                }
                await bot.sendPhoto(chatId, modernPhoto, options)

                if (!existingClient) {
                    // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–µ–¥–ª–æ–∂–∏–º –µ–º—É –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
                    return bot.sendMessage(chatId, "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–æ–≤–∞—Ä—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—éüßê", buttonForm);
                } else {
                    // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∂–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω
                    return bot.sendMessage(chatId, "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å—Ç–∏–ª—åü§î", buttonsAfterPerfume);
                }
            }
        } catch (e) {
            console.log(e)
            console.log(dataClients)
        }

    })

    bot.on('polling_error', (error) => {
        console.log(error.code);
    });

}


start()

app.post('/web-data', async (req, res) => {
    const {queryId, products, totalPrice} = req.body;
    try {
        await bot.answerWebAppQuery(queryId, {
            type: 'article',
            id: queryId,
            title: '–£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ü•≥',
            input_message_content: {message_text: `ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π ${products.map(item => item.title).join(', ')}, —Å—É–º–º–∞ –æ–ø–ª–∞—Ç—ã —Å–æ—Å—Ç–∞–≤–∏–ª–∞ ${totalPrice}‚Ç∏.`}
        })
        return res.status(200).json({})
    } catch (e) {
        await bot.answerWebAppQuery(queryId, {
            type: 'article',
            id: queryId,
            title: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—Éü§®',
            input_message_content: {message_text: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—Éü§®'}
        })
        return res.status(500).json({})
    }
})

const PORT = 3000;

app.listen(PORT, () => console.log('server started on PORT ' + PORT))